# 제어 명령
	
	
	1. 조건 제어 명령
	2. 반복 제어 명령
	
	1.조건 제어 명령이란
		==> 특정 조건에 따라서 실행 순서를 변경하는 명령
		
		형식 1] 
			
			if(조건식){
			
			}
			
		형식 2]
			
			if(조건식) {
				실행문1
			}
			else {
				실행문2
			}
			
			==> 조건식이 참이면 실행문1 을 실행
				거짓이면 실행문2 를 실행
		형식 3 ] 
		
			if(조건식){
			실행문1
			} else if(조건식2) {
			실행문2
			} else if(조건식3){
			실행문3
			}...
			
			} else{
			실행문
			}
			
		형식 4 ]
			
			swich(비고내용){
			case 데이터1:
				실행문1
				break;//반드시 기술해야한다.
			case 데이터2:
				실행문2
				break;
			case 데이터3:
				실행문3
				break;
				...
				
			default:
				실행문
			}

형식 1]
	
	1.
	if(조건식 -2) {
		실행문 -3
	}
	4
	
	조건식이 true인 경우 : 1 - 2 - 3 - 4
	조건식이 false인 경우 : 1 - 2 - 4
	
참고 ]
	자바의 명령을 보면 {} 이 존재하는 경우가 있다.
	이것을 우리는 블럭 마크라고 표현한다.
	이 의미는 실행 범위를 지정하는것이다.
	}는 ;을 대신 할 수 있다.

참고 ]
	{} 안에 실행내용이 오직 한 문장이면 
	{} 기호를 생략할수 있다.
	하지만 쓰는것을 원칙으로 한다.
	
형식 2]
	
	
	1) 
	if(조건식){
	 
	 }
	
참고 ]
	if 명령도 중첩이 가능하다.
	
	
-------------------------------------------------------------------------------------------------

#day05 
	
	
형식 4]
	
	switch ~ case 구문
	: 다중 조건식이라고 말하고
		여러개의 지문을 차례로 처리할 수 있는 명령이다.
	
	형식 ]
		
		switch(){
		case 데이터1:
			실행문1
			break;	
		case 데이터2:
			실행문2
			break;
		.....
		default:
			실행문
		}
	의미 ]
		비교내용이 데이터1 이면 실행문1 을 실행하고
					데이터2 이면 실행문2 를 실행하고
					....
					그 이외의 내용이면 default 실행문 을 실행한다.
					
	**
	참고 ]
		1. 비교 방식은 암묵적으로 == 이다.
			(크다, 작다 비교가 안된다.)
		2. 앞 case가 참이더라도 계속해서 다음 case를 질문하게 된다.
		3. 앞에 있는 case와 묵시적으로 or 연산을 한다.
	
	참고 ]
		break 명령
			==> 
			1. switc case, 반복문(while, do~while,for 명령) 에서만 사용하는 명령
			2. 해당 명령의 block을 벗어나도록 (명령을 중지하도록) 하는 명령	
			